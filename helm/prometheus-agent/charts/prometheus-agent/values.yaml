image:
  registry: quay.io
  name: giantswarm/prometheus
  tag: ""
  sha: ""
  pullPolicy: "Always"

remoteWrite: []
# - name: ""     # Name of the remote write integration
#   proxyUrl: ""
#   url: ""      # URL to send data to
#   username: "" # Username to use
#   password: "" # Password
##  https://github.com/prometheus-community/prometheus-operator/blob/main/Documentation/api.md#queueconfig
#   queueConfig:
#     capacity: 30000
#     maxSamplesPerSend: 10000
#     maxShards: 10
#   tlsConfig:
#     insecureSkipVerify: false

externalLabels: {}

serviceMonitor:
  enabled: true
  jobLabel: prometheus-agent
  ## MetricRelabelConfigs to apply to samples after scraping, but before ingestion.
  ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#relabelconfig
  ##
  metricRelabelings: []
  # - action: keep
  #   regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'
  #   sourceLabels: [__name__]

  ## RelabelConfigs to apply to samples before scraping
  ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#relabelconfig
  ##
  relabelings: []
  # - sourceLabels: [__meta_kubernetes_pod_node_name]
  #   separator: ;
  #   regex: ^(.*)$
  #   targetLabel: nodename
  #   replacement: $1
  #   action: replace

probeNamespaceSelector: {}
probeSelector: {}
serviceMonitorNamespaceSelector: {}
serviceMonitorSelector: {}
podMonitorNamespaceSelector: {}
podMonitorSelector: {}

securityContext:
  fsGroup: 2000
  runAsGroup: 2000
  runAsNonRoot: true
  runAsUser: 1000
  seccompProfile:
    type: RuntimeDefault

psp:
  enabled: true

watchdog:
  enabled: true
  # command:
  #   - sh
  #   - /etc/prometheus/configmaps/prometheus-agent-watchdog/watchdog.sh

configmaps:
  - prometheus-agent-watchdog
