{{- $remoteWrites := concat .Values.global.remoteWrite .Values.remoteWrite -}}
{{- $externalLabels := merge .Values.global.externalLabels .Values.externalLabels -}}
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  labels:
    {{ include "labels.common" . | nindent 4 }}
  name: {{ include "name" . }}
  namespace: {{ .Release.Namespace }}
spec:
  {{- if .Values.discovery.tuned }}
  additionalArgs:
  # -- Allow to tune the discovery scrape interval to save on resources usage. Default is 1s.
  - name: scrape.discovery-reload-interval
    value: {{ .Values.discovery.reloadInterval }}
  {{- end }}
  {{- with .Values.affinity }}
  affinity:
    {{- toYaml . | nindent 4 -}}
  {{- end }}
  containers:
  - args:
    - --config.file=/etc/prometheus/config_out/prometheus.env.yaml
    - --storage.agent.path=/prometheus
    - --enable-feature=agent
    - --web.enable-lifecycle
    - --web.listen-address=:9090
    name: prometheus
    # force exposition of port for monitoring
    ports:
    - containerPort: 9090
      name: http-web
      protocol: TCP
    {{- if .Values.watchdog.enabled }}
    lifecycle:
      preStop:
        exec:
          command:
          - /bin/sh
          - -c
          - rm -rf /prometheus/wal
    livenessProbe:
      exec:
        command:
        {{- if .Values.watchdog.command }}
        {{- toYaml .Values.watchdog.command | nindent 8 -}}
        {{- else }}
        - /bin/sh
        - -c
        - WATCHDOG_OVERLOAD_TOLERANCE={{ .Values.watchdog.overloadTolerance }} WATCHDOG_PROBE_TIMEOUT={{ .Values.watchdog.probeTimeout | default 3 }} WATCHDOG_PROBE_RETRIES={{ .Values.watchdog.probeRetries | default 3 }} sh /etc/prometheus/configmaps/prometheus-agent-watchdog/watchdog.sh
        {{- end }}
      # We multiply the probeTimeout by the probeRetries to get the total timeout then we multiply by 3 because we have 3 probes
      timeoutSeconds: {{ mul 3 (.Values.watchdog.probeTimeout | default 3) (.Values.watchdog.probeRetries | default 3)  }}
    {{- end }}
  configMaps:
    {{- toYaml .Values.configmaps | nindent 4 }}
  enableFeatures:
  - agent
  {{- if $externalLabels }}
  externalLabels:
    {{- toYaml $externalLabels | nindent 4 }}
  {{- end }}
  {{- if .Values.image.sha }}
  image: "{{ .Values.global.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag | default .Chart.AppVersion }}@sha256:{{ .Values.image.sha }}"
  {{- else }}
  image: "{{ .Values.global.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
  {{- end }}
  keepDroppedTargets: {{ .Values.keepDroppedTargets }}
  # workaround - required to use an `exec command` livenessProbe.
  listenLocal: true
  podMetadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    labels:
      {{ include "labels.common" . | nindent 6 }}
{{- if .Values.podMonitorNamespaceSelector }}
  podMonitorNamespaceSelector:
    {{- toYaml .Values.podMonitorNamespaceSelector | nindent 4 }}
{{ else }}
  podMonitorNamespaceSelector: {}
{{- end }}
{{- if .Values.podMonitorSelector }}  
  podMonitorSelector:
    {{- toYaml .Values.podMonitorSelector | nindent 4 }}
{{- else }}
  podMonitorSelector: {}
{{- end }}
  portName: http-web
  priorityClassName: {{ .Values.priorityClassName | quote }}
{{- if .Values.probeNamespaceSelector }}  
  probeNamespaceSelector:
    {{- toYaml .Values.probeNamespaceSelector | nindent 4 }}
{{- else }}
  probeNamespaceSelector: {}
{{- end }}
{{- if .Values.probeSelector }}
  probeSelector:
    {{- toYaml  .Values.probeSelector | nindent 4 }}
{{- else }}
  probeSelector: {}
{{- end }}
  prometheusExternalLabelName: ""
{{- if $remoteWrites }}
  remoteWrite:
  {{- range $remoteWrite := $remoteWrites }}
  - basicAuth:
      password:
        key: password
        name: {{ $remoteWrite.name }}-remote-write-api
      username:
        key: username
        name: {{ $remoteWrite.name }}-remote-write-api
    name: {{ $remoteWrite.name }}
    enableHTTP2: {{ $remoteWrite.enableHTTP2 | default "false" }}
    {{- if $remoteWrite.proxyUrl }}
    proxyUrl: {{ $remoteWrite.proxyUrl }}
    {{- end }}
    remoteTimeout: {{ $remoteWrite.remoteTimeout | default "60s" }}
    url: {{ $remoteWrite.url }}
{{- if $remoteWrite.tlsConfig }}
    tlsConfig:
      {{- toYaml $remoteWrite.tlsConfig | nindent 6 }}
{{- end }}
{{- if $remoteWrite.queueConfig }}
    queueConfig:
      {{- toYaml $remoteWrite.queueConfig | nindent 6 }}
{{- end -}}
{{- end -}}
{{- else }}
  remoteWrite: []
{{- end }}
  replicas: {{ .Values.replicas }}
  replicaExternalLabelName: ""
  retention: {{ .Values.retention }}
  scrapeInterval: {{ .Values.scrapeInterval }}
  securityContext:
    {{- toYaml  .Values.securityContext | nindent 4 }}
  serviceAccountName: {{ include "name" .}}
{{- if .Values.serviceMonitorNamespaceSelector }}
  serviceMonitorNamespaceSelector:
    {{- toYaml .Values.serviceMonitorNamespaceSelector | nindent 4 }}
{{- else }}
  serviceMonitorNamespaceSelector: {}
{{- end }}
{{- if .Values.serviceMonitorSelector }}
  serviceMonitorSelector:
    {{- toYaml .Values.serviceMonitorSelector | nindent 4 -}}
{{ else }}
  serviceMonitorSelector: {}
{{- end }}
  shards: {{ .Values.shards }}
  version: {{ default .Values.image.tag .Values.version | default .Chart.AppVersion }}
